// <auto-generated />
using System;
using GaHipHop_Repository.Entity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GaHipHop_API.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("GaHipHop_Repository.Entity.Admin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Admin", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Address = "Admin Address",
                            Email = "admin@example.com",
                            FullName = "Admin User",
                            Password = "$2a$12$W6Fr2O.JNK5pxRlm36q1DeLI.hDM5AhHe..ZnhFhofXKwSNUrMTA.",
                            Phone = "123456789",
                            RoleId = 1L,
                            Status = true,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2L,
                            Address = "Manager Address",
                            Email = "admin@example.com",
                            FullName = "Manager User",
                            Password = "$2a$12$W6Fr2O.JNK5pxRlm36q1DeLI.hDM5AhHe..ZnhFhofXKwSNUrMTA.",
                            Phone = "123456789",
                            RoleId = 2L,
                            Status = true,
                            Username = "manager"
                        });
                });

            modelBuilder.Entity("GaHipHop_Repository.Entity.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CategoryName = "Category 1",
                            Status = true
                        },
                        new
                        {
                            Id = 2L,
                            CategoryName = "Category 2",
                            Status = true
                        });
                });

            modelBuilder.Entity("GaHipHop_Repository.Entity.Contact", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Facebook")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Instagram")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Shoppee")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tiktok")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Contact", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Email = "phatdao@gmail.com",
                            Facebook = "https://www.facebook.com/nguyen.rosie.946",
                            Instagram = "https://www.instagram.com/ga.hiphop?fbclid=IwZXh0bgNhZW0CMTAAAR29xxUdp_tZ0TqVPfLq5zQVl72SEG7E0SpmIJY8ED62ZmmsKdaTZrc51O4_aem_-LACUZgsYTo5T1fMMgEhjg",
                            Phone = "0855005005",
                            Shoppee = "https://shopee.vn/ga.hiphop",
                            Tiktok = "https://www.tiktok.com/@ga.hiphop?fbclid=IwZXh0bgNhZW0CMTAAAR18hmJoFZrOpcozoCaEq74luSuL4Y84xGSBJ3bnlgjRlYhB3xUaRy4YE3Y_aem_494gWYY8v90XRrvald7BQA"
                        });
                });

            modelBuilder.Entity("GaHipHop_Repository.Entity.Discount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("ExpiredDate")
                        .HasColumnType("datetime(6)");

                    b.Property<float>("Percent")
                        .HasColumnType("float");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Discount", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ExpiredDate = new DateTime(2024, 8, 30, 17, 17, 47, 704, DateTimeKind.Local).AddTicks(3303),
                            Percent = 0f,
                            Status = true
                        },
                        new
                        {
                            Id = 2L,
                            ExpiredDate = new DateTime(2024, 8, 30, 17, 17, 47, 704, DateTimeKind.Local).AddTicks(3339),
                            Percent = 10f,
                            Status = true
                        },
                        new
                        {
                            Id = 3L,
                            ExpiredDate = new DateTime(2024, 8, 30, 17, 17, 47, 704, DateTimeKind.Local).AddTicks(3341),
                            Percent = 15f,
                            Status = true
                        },
                        new
                        {
                            Id = 4L,
                            ExpiredDate = new DateTime(2024, 9, 30, 17, 17, 47, 704, DateTimeKind.Local).AddTicks(3342),
                            Percent = 20f,
                            Status = true
                        });
                });

            modelBuilder.Entity("GaHipHop_Repository.Entity.Kind", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ColorName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Image")
                        .HasColumnType("longtext");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Kind", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ColorName = "Red",
                            Image = "https://firebasestorage.googleapis.com/v0/b/gahiphop-4de10.appspot.com/o/images%2F61104088-d946-4d5b-80fc-427f8ab3690a_GaHipHop.jpg?alt=media&token=a9dca6bb-40a1-4935-aaf8-e10d55820ac2",
                            ProductId = 1L,
                            Quantity = 50,
                            Status = true
                        },
                        new
                        {
                            Id = 2L,
                            ColorName = "Blue",
                            Image = "https://firebasestorage.googleapis.com/v0/b/gahiphop-4de10.appspot.com/o/images%2F61104088-d946-4d5b-80fc-427f8ab3690a_GaHipHop.jpg?alt=media&token=a9dca6bb-40a1-4935-aaf8-e10d55820ac2",
                            ProductId = 1L,
                            Quantity = 50,
                            Status = true
                        },
                        new
                        {
                            Id = 3L,
                            ColorName = "White",
                            Image = "https://firebasestorage.googleapis.com/v0/b/gahiphop-4de10.appspot.com/o/images%2F61104088-d946-4d5b-80fc-427f8ab3690a_GaHipHop.jpg?alt=media&token=a9dca6bb-40a1-4935-aaf8-e10d55820ac2",
                            ProductId = 2L,
                            Quantity = 500,
                            Status = true
                        },
                        new
                        {
                            Id = 4L,
                            ColorName = "Yellow",
                            Image = "https://firebasestorage.googleapis.com/v0/b/gahiphop-4de10.appspot.com/o/images%2F61104088-d946-4d5b-80fc-427f8ab3690a_GaHipHop.jpg?alt=media&token=a9dca6bb-40a1-4935-aaf8-e10d55820ac2",
                            ProductId = 3L,
                            Quantity = 150,
                            Status = true
                        },
                        new
                        {
                            Id = 5L,
                            ColorName = "Pink",
                            Image = "https://firebasestorage.googleapis.com/v0/b/gahiphop-4de10.appspot.com/o/images%2F61104088-d946-4d5b-80fc-427f8ab3690a_GaHipHop.jpg?alt=media&token=a9dca6bb-40a1-4935-aaf8-e10d55820ac2",
                            ProductId = 4L,
                            Quantity = 250,
                            Status = true
                        },
                        new
                        {
                            Id = 6L,
                            ColorName = "Purple",
                            Image = "https://firebasestorage.googleapis.com/v0/b/gahiphop-4de10.appspot.com/o/images%2F61104088-d946-4d5b-80fc-427f8ab3690a_GaHipHop.jpg?alt=media&token=a9dca6bb-40a1-4935-aaf8-e10d55820ac2",
                            ProductId = 5L,
                            Quantity = 550,
                            Status = true
                        },
                        new
                        {
                            Id = 7L,
                            ColorName = "Orange",
                            Image = "https://firebasestorage.googleapis.com/v0/b/gahiphop-4de10.appspot.com/o/images%2F61104088-d946-4d5b-80fc-427f8ab3690a_GaHipHop.jpg?alt=media&token=a9dca6bb-40a1-4935-aaf8-e10d55820ac2",
                            ProductId = 6L,
                            Quantity = 500,
                            Status = true
                        },
                        new
                        {
                            Id = 8L,
                            ColorName = "Green",
                            Image = "https://firebasestorage.googleapis.com/v0/b/gahiphop-4de10.appspot.com/o/images%2F61104088-d946-4d5b-80fc-427f8ab3690a_GaHipHop.jpg?alt=media&token=a9dca6bb-40a1-4935-aaf8-e10d55820ac2",
                            ProductId = 6L,
                            Quantity = 500,
                            Status = true
                        });
                });

            modelBuilder.Entity("GaHipHop_Repository.Entity.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("OrderCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("double");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Order", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateDate = new DateTime(2024, 7, 30, 17, 17, 47, 704, DateTimeKind.Local).AddTicks(4098),
                            OrderCode = "ORD001",
                            TotalPrice = 100.0,
                            UserId = 1L
                        });
                });

            modelBuilder.Entity("GaHipHop_Repository.Entity.OrderDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("KindId")
                        .HasColumnType("bigint");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<double>("OrderPrice")
                        .HasColumnType("double");

                    b.Property<int>("OrderQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KindId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetails", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            KindId = 1L,
                            OrderId = 1L,
                            OrderPrice = 100.0,
                            OrderQuantity = 1
                        });
                });

            modelBuilder.Entity("GaHipHop_Repository.Entity.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AdminId")
                        .HasColumnType("bigint");

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("DiscountId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("ProductPrice")
                        .HasColumnType("double");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DiscountId");

                    b.ToTable("Product", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AdminId = 1L,
                            CategoryId = 1L,
                            CreateDate = new DateTime(2024, 7, 30, 17, 17, 47, 704, DateTimeKind.Local).AddTicks(4047),
                            DiscountId = 1L,
                            ModifiedDate = new DateTime(2024, 7, 30, 17, 17, 47, 704, DateTimeKind.Local).AddTicks(4048),
                            ProductDescription = "Nilou",
                            ProductName = "Figure",
                            ProductPrice = 5000000.0,
                            Status = true,
                            StockQuantity = 100
                        },
                        new
                        {
                            Id = 2L,
                            AdminId = 1L,
                            CategoryId = 1L,
                            CreateDate = new DateTime(2024, 7, 30, 17, 17, 47, 704, DateTimeKind.Local).AddTicks(4051),
                            DiscountId = 1L,
                            ModifiedDate = new DateTime(2024, 7, 30, 17, 17, 47, 704, DateTimeKind.Local).AddTicks(4051),
                            ProductDescription = "Shenhe",
                            ProductName = "Sticker",
                            ProductPrice = 1000000.0,
                            Status = true,
                            StockQuantity = 500
                        },
                        new
                        {
                            Id = 3L,
                            AdminId = 1L,
                            CategoryId = 1L,
                            CreateDate = new DateTime(2024, 7, 30, 17, 17, 47, 704, DateTimeKind.Local).AddTicks(4053),
                            DiscountId = 2L,
                            ModifiedDate = new DateTime(2024, 7, 30, 17, 17, 47, 704, DateTimeKind.Local).AddTicks(4054),
                            ProductDescription = "Navia",
                            ProductName = "Key",
                            ProductPrice = 1500000.0,
                            Status = true,
                            StockQuantity = 150
                        },
                        new
                        {
                            Id = 4L,
                            AdminId = 1L,
                            CategoryId = 2L,
                            CreateDate = new DateTime(2024, 7, 30, 17, 17, 47, 704, DateTimeKind.Local).AddTicks(4056),
                            DiscountId = 3L,
                            ModifiedDate = new DateTime(2024, 7, 30, 17, 17, 47, 704, DateTimeKind.Local).AddTicks(4056),
                            ProductDescription = "Furina",
                            ProductName = "Standee",
                            ProductPrice = 2000000.0,
                            Status = true,
                            StockQuantity = 250
                        },
                        new
                        {
                            Id = 5L,
                            AdminId = 1L,
                            CategoryId = 2L,
                            CreateDate = new DateTime(2024, 7, 30, 17, 17, 47, 704, DateTimeKind.Local).AddTicks(4058),
                            DiscountId = 4L,
                            ModifiedDate = new DateTime(2024, 7, 30, 17, 17, 47, 704, DateTimeKind.Local).AddTicks(4059),
                            ProductDescription = "Xianyun",
                            ProductName = "Puzzle",
                            ProductPrice = 2500000.0,
                            Status = true,
                            StockQuantity = 550
                        },
                        new
                        {
                            Id = 6L,
                            AdminId = 1L,
                            CategoryId = 2L,
                            CreateDate = new DateTime(2024, 7, 30, 17, 17, 47, 704, DateTimeKind.Local).AddTicks(4065),
                            DiscountId = 4L,
                            ModifiedDate = new DateTime(2024, 7, 30, 17, 17, 47, 704, DateTimeKind.Local).AddTicks(4065),
                            ProductDescription = "Chiori",
                            ProductName = "Poster",
                            ProductPrice = 3000000.0,
                            Status = true,
                            StockQuantity = 1000
                        });
                });

            modelBuilder.Entity("GaHipHop_Repository.Entity.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            RoleName = "Admin"
                        },
                        new
                        {
                            Id = 2L,
                            RoleName = "Manager"
                        });
                });

            modelBuilder.Entity("GaHipHop_Repository.Entity.UserInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("UserInfo", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Address = "Address 1",
                            Email = "user1@example.com",
                            Phone = "123456789",
                            UserName = "user1"
                        });
                });

            modelBuilder.Entity("GaHipHop_Repository.Entity.Admin", b =>
                {
                    b.HasOne("GaHipHop_Repository.Entity.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("GaHipHop_Repository.Entity.Kind", b =>
                {
                    b.HasOne("GaHipHop_Repository.Entity.Product", "Product")
                        .WithMany("Kind")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("GaHipHop_Repository.Entity.Order", b =>
                {
                    b.HasOne("GaHipHop_Repository.Entity.UserInfo", "UserInfo")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserInfo");
                });

            modelBuilder.Entity("GaHipHop_Repository.Entity.OrderDetails", b =>
                {
                    b.HasOne("GaHipHop_Repository.Entity.Kind", "Kind")
                        .WithMany()
                        .HasForeignKey("KindId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GaHipHop_Repository.Entity.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kind");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("GaHipHop_Repository.Entity.Product", b =>
                {
                    b.HasOne("GaHipHop_Repository.Entity.Admin", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GaHipHop_Repository.Entity.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GaHipHop_Repository.Entity.Discount", "Discount")
                        .WithMany()
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("Category");

                    b.Navigation("Discount");
                });

            modelBuilder.Entity("GaHipHop_Repository.Entity.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("GaHipHop_Repository.Entity.Product", b =>
                {
                    b.Navigation("Kind");
                });
#pragma warning restore 612, 618
        }
    }
}
